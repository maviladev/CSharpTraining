// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatternCQRS_Sample.Persistence;

namespace PatternCQRS_Sample.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PatternCQRS_Sample.Domain.Course", b =>
                {
                    b.Property<Guid>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<DateTime?>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = new Guid("0af879bf-5642-45a3-b79c-4d7ab2677436"),
                            CreationDate = new DateTime(2022, 5, 30, 19, 29, 45, 359, DateTimeKind.Local).AddTicks(8653),
                            Description = "C# for beginners",
                            Price = 150m,
                            PublishDate = new DateTime(2022, 7, 30, 19, 29, 45, 364, DateTimeKind.Local).AddTicks(7117),
                            Title = "C# Basic"
                        },
                        new
                        {
                            CourseId = new Guid("3360d2ec-f4e9-4407-8ab3-c95c43ec424e"),
                            CreationDate = new DateTime(2022, 5, 30, 19, 29, 45, 366, DateTimeKind.Local).AddTicks(1886),
                            Description = "Go for beginners",
                            Price = 150m,
                            PublishDate = new DateTime(2022, 8, 30, 19, 29, 45, 366, DateTimeKind.Local).AddTicks(1915),
                            Title = "Go Basic"
                        },
                        new
                        {
                            CourseId = new Guid("a64e900c-e9ad-41ef-978e-f235fdc687c2"),
                            CreationDate = new DateTime(2022, 5, 30, 19, 29, 45, 366, DateTimeKind.Local).AddTicks(2041),
                            Description = "Android for beginners",
                            Price = 150m,
                            PublishDate = new DateTime(2022, 9, 30, 19, 29, 45, 366, DateTimeKind.Local).AddTicks(2047),
                            Title = "Android Basic"
                        },
                        new
                        {
                            CourseId = new Guid("b4b4b983-fc65-45e8-87ac-56083ae5d57f"),
                            CreationDate = new DateTime(2022, 5, 30, 19, 29, 45, 366, DateTimeKind.Local).AddTicks(2072),
                            Description = "iOS for beginners",
                            Price = 150m,
                            PublishDate = new DateTime(2022, 10, 30, 19, 29, 45, 366, DateTimeKind.Local).AddTicks(2076),
                            Title = "iOS Basic"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
